snippet safe "safe bash options" b
# e - script stops on error (return != 0)
# u - error if undefined variable
# o pipefail - script fails if one of piped command fails
# x - output each line (debug)
set -euo pipefail
endsnippet

snippet getopt
function handle-arguments() 
{
	__ScriptVersion="${1:version}"

	while getopts ":hv" opt
	do
	  case $opt in

		h|help     )  help; exit 0   ;;

		v|version  )  echo "$${0:0} -- Version $__ScriptVersion"; exit 0   ;;

		* )  echo -e "\n  Option does not exist : $OPTARG\n"
			  help; exit 1   ;;

	  esac    # --- end of case ---
	done
	shift $(($OPTIND-1))
}

function help ()
{
	echo "Usage :  $${0:0} [options] [--]

	Options:
	-h|help       Display this message
	-v|version    Display script version"

}
endsnippet

snippet shunit "Shell unit test" b
# file: `!p snip.rv = os.path.relpath(path)`
# Doc: https://github.com/kward/shunit2

${0}

source shunit2
endsnippet

snippet shunit2comp "Shell unit test with example" b
# file: `!p snip.rv = os.path.relpath(path)`
# Doc: https://github.com/kward/shunit2

# Run before all tests
function oneTimeSetUp() {
	return 0
}

# Run before each test
function setUp() {
	return 0
}

function testEquality() {
	assertEquals 1 1
}

# Run after each test
function tearDown() {
	return 0
}

# Run after all tests
function oneTimeTearDown() {
	return 0
}

source shunit2
endsnippet
